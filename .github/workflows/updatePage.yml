name: update page

#on:
#  push:
#    branches:
#      - master
#  schedule:
#    - cron: "1 0 * * *"

jobs:
  update_page:
    runs-on: ubuntu-latest

    steps:
      - name: checkout project
        uses: actions/checkout@v2
        with:
          path: main

      - name: checkout parser tool
        uses: actions/checkout@v2
        with:
          repository: mh-/diagnosis-keys
          path: diagnosis-keys

      - name: set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: install requirements
        working-directory: main
        run: pip install -r requirements.txt

      - name: install tool requirements
        working-directory: diagnosis-keys
        run: pip install -r requirements.txt

      - name: download files
        working-directory: main
        run: python download_files.py

      #- name: download hourly files
      #  working-directory: main
      #  run: python download_files_hourly.py

      - name: download files europe
        working-directory: main
        run: python download_files.py -c EUR

      #- name: download hourly files europe
      #  working-directory: main
      #  run: python download_files_hourly.py -c EUR

      - name: generate bash files
        working-directory: main
        run: python generate_bash.py

      - name: generate json files
        working-directory: main
        run: bash create_json.sh

      #- name: generate hourly json files
      #  working-directory: main
      #  run: bash create_json_hourly.sh

      - name: generate json files europe
        working-directory: main
        run: bash create_json_EUR.sh

      - name: generate plaintext files
        working-directory: main
        run: bash create_plaintext.sh

      - name: generate users files
        working-directory: main
        run: bash create_users.sh

      #- name: generate hourly users files
      #  working-directory: main
      #  run: bash create_users_hourly.sh

      - name: generate data for plots
        working-directory: main
        run: python generate_data.py

      - name: generate html
        working-directory: main
        run: python generate_html.py

      - name: generate filehashes
        working-directory: main
        run: python generate_filehashes.py

      - name: generate filehashes europe
        working-directory: main
        run: python generate_filehashes.py -c EUR

      - name: cleanup before publication
        working-directory: main
        run: bash cleanup_before_publication.sh

      - name: install puppeteer
        uses: mujo-code/puppeteer-headful@master
        env:
          CI: 'true'

      - name: take screenshot
        uses: flameddd/screenshots-ci-action@v1.1.0
        with:
          url: "https://ctt.pfstr.de/"
          type: "png"

      - name: copy screenshot
        run: cp screenshots/desktopPage1280x720*.png main/page/Screenshot.png

      - name: publish
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=main/page --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
